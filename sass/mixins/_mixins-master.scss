// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1.25rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

// Column width with margin
@mixin column-width($numberColumns: 3) {
	width: map-get( $columns, $numberColumns ) - ( ( $columns__margin * ( $numberColumns - 1 ) ) / $numberColumns );
}


@mixin borde($radio){
    -moz-border-radius: $radio;
    -webkit-border-radius: $radio;
    border-radius: $radio;
}

@mixin flex-container {
    display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */
    display: -moz-box;         /* OLD - Firefox 19- (buggy but mostly works) */
    display: -ms-flexbox;      /* TWEENER - IE 10 */
    display: -webkit-flex;     /* NEW - Chrome */
    display: flex;             /* NEW, Spec - Opera 12.1, Firefox 20+ */
}

//slide menu animation
@-webkit-keyframes slide {
  0%   { left: -90vw; }
  100% { left: 0; }
}
@-moz-keyframes slide {
  0%   { left: -90vw; }
  100% { left: 0; }
}
@-o-keyframes slide {
  0%   { left: -90vw; }
  100% { left: 0; }
}
@keyframes slide {
  0%   { left: -90vw; }
  100% { left: 0; }
}

//svg background with compatible png
$public_path: "./";

@mixin vector-bg-with-fallback($name) {
  background-image: url('#{$public_path}img/#{$name}.png');
  background-image: none, url('#{$public_path}img/#{$name}.svg');
  background-repeat: no-repeat;
}